
instead_version "1.9.1"
require "para"
require "dash"
require "quotes"
require "nouse"
require "hideinv"

require "dbg"

--======================================================================

isMfp1Jammed = function()
    return (exist(jammedPaper, mfpInside) ~= nil);
end;

mfp1 = obj { 
    nam = 'Sharp AL-1217';
    dsc = 'Рядом со столом стоит старое {МФУ Sharp}.';
    used = function(s, w)
        if w == someDocument then
            p('Я поместил ' .. w.nam .. ' внутрь МФУ на стекло сканера.');
            placef(w, s);
            inv():del(w);
        else
            p(rndItem({w.verb .. 'МФУ? Хм... ну не знаю, не знаю...',
                        'Можно конечно ' .. w.verb .. 'МФУ, но непонятно что делать потом..'}));
        end;
        return true;
    end;
    act = function(s)
        if isMfp1Jammed() and disabled(mfpInside) then
            enable(mfpInside);
            return 'Осмотрев МФУ, сбоку я обнаружил крышку.';
        elseif (objs(s):srch(someDocument) ~= nil) then
            walkin('mfuPanel');
            return;
        else
            return 'Старая МФУ-шка, уже снятая с производства, модель Sharp AL-1217.';
        end;
    end;
    obj = {'mfpInside'};
};

mfpInside = obj {
    _opened = false;
    _fixed = false;
    
    nam = 'mfpInside';
    dsc = function(s)
        if s._opened then
            return '{Крышка} МФУ открыта.';
        else
            return '{Крышка} МФУ закрыта.';
        end;
    end;
    act = function(s)
        if s._opened then
            s._opened = false;
            return 'Я захлопнул крышку';
        else
            return 'Крышка закрыта';
        end;
    end;
    obj = {
        obj {
            nam = 'lock';
            dsc = function(s)
                if not mfpInside._opened then
                    return 'Она защелкивается на {защелку}.';
                end;
            end;
            act = function(s)
                mfpInside._opened = true;
                return 'Я нажал на защелку, крышка открылась.';
            end;
        };
        
        obj {
            nam = 'screw';
            dsc = function(s)
                if mfpInside._opened then
                    return '^Внутри МФУ выделяется один {болт}, который держит механизм.';
                end;
            end;
            act = function(s)
                if mfpInside._fixed then
                    return 'Отрегулированный болт, может быть теперь бумага не будет зажевываться.';
                else 
                    return 'Болт держит механизм прохода бумаги. Его бы подрегулировать..';
                end;
            end;
            used = function(s, w)
                if w == turn_screw then
                    if (mfpInside._fixed) then
                        return 'Я уже отрегулировал болт, лучше к нему теперь не лезть.';
                    end;
                    
                    mfpInside._fixed = true;
                    return 'Я подрегулировал болт, кажется теперь не должно зажевывать.';
                else 
                    return 'Предлагаете ' .. w.verb .. ' болт? Мдя... его надо подрегулировать, а не ' .. w.verb .. '!';
                end;
            end;
        };
    };
    
}:disable();

jammedPaper = obj {
    nam = 'jammedPaper';
    dsc = function(s)
        if mfpInside._opened then
            return '^В механизме виден смятый {лист бумаги}.';
        end;
    end;
    act = function(s)
        remove(s, mfpInside);
        return 'Я вытащил помятый лист из механизма';
    end;
};

-- TODO: change this dialog to room, because too much code inside strings
mfuPanel = dlg {
    _copyMode = false;
    hideinv = true;
    
    nam = 'Ксерокопирование';
    dsc = 'На лицевой панели МФУ располагаются органы управления';
	phr = {
		{always = true, 'Кнопка переключения режима.', 'Режим работы:', 
        [[
            _copyMode = not _copyMode; 
            if _copyMode then
                p 'копирование';
            else
                p 'сканирование'
            end;
        ]]};
		{always = true, 'Кнопка копирования.', 'Я нажал кнопку копирования...^', 
        [[
            if not _copyMode then
                p 'МФУ стоит в режиме сканирования. В этом режиме копии не снимаются.';
            elseif mfpInside._opened then
                p 'Крышка МФУ открыта, в этом состоянии он не будет работать';
            elseif  isMfp1Jammed() then
                p 'Кажется внутри зажевана бумага, сначала надо ее вытащить.';
            elseif not mfpInside._fixed then
                place(jammedPaper, mfpInside);
                p 'Ну вот, МФУ зажевал бумагу. Он очень старый я ведь предупреждал!';
                back();
            else
                objs(mfp1):del(someDocument);
                achivs._value = achivs._value + 1;
                p 'Ну все, кажется копия успешно снялась, УРА!';
                back();
            end;
        ]]};
		{always = true, 'Кнопки настройки изображения.', 'Я настроил изображение получше. Хотя, вроде, и так было норм.'};
	};
    
    way = {'cab6'};
};

someDocument = obj {
    verb = 'завернуть';
    
	nam = 'какой-то документ';
	inv = 'Этот документ мне дали чтобы снять с него копию.';
    dsc = 'В сканере МФУ находится {какой-то документ}.';
    tak = 'Я вытащил документ из сканера.';
};

--======================================================================


weatherDlg = dlg {
    hideinv = true;
    
    nam = 'разговор с директором';
    dsc = 'Ну что принес погоду?';
    
    phr = {
        {'Да принес вот держите.', 'Хмм.. посмотрим', 
        [[
            if weatherPaper._place ~= 'Барнаул' then
                p 'Ты мне чью погоду то принес? Забыл в каком городе мы живем??';
                _needWeather = true;
            elseif weatherPaper._src ~= 'Yandex' then
                p 'Что-то я тут нифига не понимаю, распечатай погоду из Яндекса и принеси мне!';
                _needWeather = true;
            else
                p 'Хорошо, спасибо!'
                _needWeather = false;
                achivs._value = achivs._value + 1;
            end;
            remove(weatherPaper, me());
            back();
        ]]};
    };
};

-- =====================================================================

cab1 = room {
    enter = 'Я вошел в первый кабинет.';
    nam = 'Кабинет №1';
    dsc = 'Это торговый отдел, тут сидят супервайзеры.',
    obj = {
        obj {
            nam = 'Cупервайзеры';
            dsc = 'Я сперва не представлял что это за {супервайзеры} такие и чего они "супервайзят", но потом понял.';
            act = function()
                    return rndItem({[[Если интересно, то под каждым супервайзером ходит команда торговых представителей,
                                      а они их "супервайзят" чтобы продукция продавалась и вообще все ОК было, во как!]],
                                    [[С супервайзерами как и с бухами говорить особо не о чем, 
                                    но иногда они просят сочинить им очередную формулу в экселе.]]});
            end;
        };
    };
    way = {'lobby_start'};
};

-- =====================================================================

wc1 = room {
    enter = 'Я пришел в туалет';
    nam = 'Туалет 1';
    dsc = 'Это обычный туалет';
    exit = function()
        if not wckey._opened then
            return 'Я не могу выйти, ведь дверь закрыта', false;
        end;
    end;
    obj = {'pan','wckey','sink'};
    way = {'lobby_start'};
};

wc2 = room {
    enter = 'Я пришел в туалет';
    nam = 'Туалет 2';
    dsc = 'Это обычный туалет';
    exit = function()
        if not wckey._opened then
            return 'Я не могу выйти, ведь дверь закрыта', false;
        end;
    end;
    obj = {'pan','wckey','sink'};
    way = {'lobby_start'};
};

sink = obj {
    nam = 'раковина',
    dsc = 'Сбоку на стене приделана {раковина} с кранами.',
    act = function()
        if _dirtyHands then
            _dirtyHands = false;
            return 'Я вымыл руки.';
        else
            return 'Руки еще не замарались, зачем их так часто мыть?';
        end;

    end,
};

wckey = obj {
    _opened = true;
    nam = 'ключ';
    dsc = function(s)
        p 'В двери вставлен {ключ}. Дверь';
        if s._opened then
            p 'открыта.';
        else
            p 'закрыта.';
        end;
    end,
    act = function(s)
        s._opened = not s._opened;
        return 'Я поворачиваю ключ.';
    end;
};

pan = obj {
    nam = 'унитаз',
    dsc = 'В конце туалета как и положено расположен {унитаз}.',
    act = function()
        if wckey._opened then
            return 'А вдруг кто-нибудь зайдет и увидит?';
        else
            return 'Вообще-то, я пока не хочу в туалет';
        end;
    end;
};

-- =====================================================================

archiveroom = room {
    enter = 'Я зашел в архивную комнату';
    nam = 'Архивная';
    dsc = function()
        p 'Эта комната что-то вроде большой кладовки. Здесь ночами сидят сторожа';
        p(txtst 'и смотрят порнуху.');
    end;
    obj = {
        obj {
            nam = 'телевизор';
            dsc = 'В углу стоит {телевизор}, чтобы сторожам не было скучно.';
            act = function()
                return rndItem({'Лучше я не буду сейчас включать телевизор.',
                                'Телевизор лучше не включать в рабочее время, если я не хочу работать сторожем.',
                                'Врядли там показывают что-то интересное, и вообще от телевизора тупеют!',
                                'Тот кто смотрит телевизор - заканчивает свою карьеру сторожем :)'});
            end;
        };
        obj {
            nam = 'коробки';
            dsc = 'Вдоль стен навалена куча {коробок}.';
            act = 'Коробки с документами, а также пустые коробки от тубы для Kyocera TaskAlfa 180';
        };
    };
    way = {'lobby_start','kitchen'},
};

-- =====================================================================

kitchen = room {
    enter = 'Я пришел на кухню.';
    nam = 'Кухня';
    dsc = 'Это кухня, тут мы едим';
    obj = {
        vway('Повар', 'На кухне хозяйничает наш повар {Елена Ивановна}.', 'cookerDlg');
        'vegaFood',
        obj {
            nam = 'еда';
            dsc = function()
                if disabled(vegaFood) then
                    p 'На столе стоит вкусный {борщ} с капусткой, но не красный, {сосисочки}.';
                end;
            end;
            act = function()
                    return rndItem({'Я уже 5 лет как вегетарианец злой, с каждой ЗП я покупаю курицу и отпускаю ее на волю!',
                                    'Не ем я такое, нельзя мне.',
                                    "I just don't eat meat",
                                    'Я просто не ем мясо - это нормально..',
                                    'Некоторые люди почему-то не едят мясо, так вот, я как раз один из них )'});
            end;
        };
    };
    way = {'archiveroom'},
};

vegaFood = obj {
    nam = 'вега-еда',
    dsc = [[Она поставила на стол {борщ} с капусткой но без мяса,
            какой-то {салат} (куда крошат морковку, капусту и яблоки с ... ой увлекся...),
            вкусный {чай}. Я чувствую себя человеком!]];
    act = function(s)
        if not _dirtyHands then
            s:disable();
            cookerDlg:pon('thx');
            achivs._value = achivs._value + 1;
            return 'Я поел, теперь можно спокойно работать дальше';
        else
            return 'Я же не буду есть с грязными руками, так и заболеть можно!';
        end;
    end,
}:disable();

cookerDlg = dlg {
    hideinv = true;
    nam = 'Разговор с поваром';
    dsc = 'Я подошел к нашему повару - не молодая женщина в переднике и косынке.';
    phr = {
        {always = true, 'Здравствуйте!', 'Здравствуй!', [[back()]]};
        {   tag = 'query',
            true,
            'А нельзя ли что-нибудь съесть?',
            'Да, конечно, там на столе - это тебе. Приятного аппетита.',
            [[if disabled(vegaFood) then
                    pon('vegan');
              end;]]
        };
        {tag = 'vegan', false, 'Но я же не ем мясное!', 'Ой, прости, сейчас чтонибудь придумаем...', [[vegaFood:enable(); back();]]};
        {tag = 'thx', false, 'Спасибо!', 'На доброе здоровье!', [[back();]]};
    };
    exit = 'Повар что-то делает.';
};

-- =====================================================================

upstairsSquare = room {
    nam = 'Площадка второго этажа';
    dsc = 'Я попал на лестничную площадку 2-го этажа.';
    obj = {
        vway('Дверь в коридор', 'Прямо передо мной {дверь} ведущая в помещения втрого этажа.', 'secondFloor');
        obj {
            nam = 'Лестница на крышу';
            dsc = '^Сбоку от меня находится {лестница} на крышу.';
            act = 'Выход на крышу закрыт, просто так туда не попасть.';
        };
        vway('Ступеньки', '^Позади меня {ступеньки}, ведущие вниз.', 'porch');
    };
    
    way = {'secondFloor', 'porch'};
};

secondFloor = room {
    nam = 'Второй этаж';
    dsc = 'Я в коридоре на втором этаже. Передо мной множество дверей.';
    obj = {vway('Кабинет Жанны', 'Одна {дверь}, я знаю точно, ведет в кабинет Жанны.', 'jannaRoom')};
    way = {'jannaRoom', 'upstairsSquare'};
};

jannaRoom = room {
    nam = 'Кабинет Жанны';
    dsc = 'Это кабинет Жанны, она наш партнер по бизнесу или что-то вроде того.';
    obj = {
        obj {
            nam = 'Жанна';
            dsc = 'За столом у компьютера сидит {Жанна}, и чем-то активно занимается.';
            act = function()
                return;
            end;
        }
    };
    way = {'secondFloor'};
};

-- =====================================================================

main_enter = room {
    nam = 'Крыльцо';
    dsc = [[Я стою прямо перед главным входом в нашу фирму. Передо мной бывшее здание завода, 
            теперь здесь сдаются в аренду помещения для разных частных контор.]];
    obj = {
        vway('Дорога на склад', 'Справа здание огибает {дорога} на склад. Склад находится с противоположной стороны здания.', 'way_to_storage');
        obj {
            nam = 'Въезд на территорию';
            dsc = '^Позади меня расположен {въезд} на территорию бывшего завода. Через него сотрудники фирмы попадают на работу.';
            act = 'Рабочий день еще не закончился, домой уходить рано!';
        };
    };
    way = {'porch', 'way_to_storage'};
};

way_to_storage = room {
    nam = 'Дорога на склад';
    dsc = 'Я иду по длинной дороге которая огибает здание.';
    obj = {
        obj {
            nam = 'Лестница';
            dsc = 'Среди кустов виднеется старая, ржавая {лестница} на крышу.';
            act = 'Лестница довольно старая, того и глядишь - отвалится, по ней я уж точно не полезу.';
        };
    };
    way = {'main_enter', 'storage_enter'};
};

storage_enter = room {
    nam = 'Вход на склад';
    dsc = [[Я стою перед входом в складские помещения. Здесь шныряют туда-сюда грузчики, 
            экспедиторы со своими грузовиками забирают свой груз.]];
    obj = {
        vway('Вход', 'Внутрь склада можно попасть через здоровенный {вход}, в который мог бы пролезть грузовик.^', 'storage');
        obj {
            nam = 'Лестница';
            dsc = 'Справа от входа, не подалеку виднеется пожарная {лестница} на крышу.';
            act = function()
                return 'Ни к чему мне сейчас лезть на крышу, да и высоты я боюсь.';
            end;
        };
        obj {
            nam = 'Провод';
            dsc = [[Сверху над входом, среди всего прочего, виден черный {провод}, 
                    который свисает по стене с крыши и заходит внутрь склада через щель между железным косяком входа и стеной.]];
            act = 'Интересно, что это за провод, отсюда и не поймешь...';
        };
    };
    way = {'storage', 'way_to_storage'};
};

storage = room {
    nam = 'Склад';
    dsc = [[Просторное складское помещение, с кучей коробок, 
            шныряющих грузчиков и специфичным запахом. Чувствуется, что продуктами торгуем )]];
    obj = {
		obj {
			nam = 'Провода';
			dsc = [[Вдоль стены наверху расположена {проводка}. На складе есть много всего, требующего проводов: 
					камеры слежения, компьютер, телефон, электричество. Пучек проводов идет вдоль стены в сторону какого-то контейнера.]];
			act = 'Рассмотрев связку различных проводов, я нашел один черный провод, идущий из щели между стеной и входным косяком.';
		};
		vway('Контейнер', '^Внутри просторного складского помещения расположено что-то вроде контейнера с {дверью}. Внутри него горит свет.', 'storage_point');
    };
    way = {'storage_enter', 'storage_point'};
};

storage_point = room {
	enter = 'Я открыл дверь и зашел внутрь контейнера. Здесь довольно тесно.';
	exit = 'Я покинул тесное помещение.';
	nam = 'Кабинет кладовщика';
	dsc = 'Это что-то вроде кабинета управляющего складом. Тут стоит довольно пыльный стол со стулом.';
	obj = {
		obj {
			nam = 'Монитор';
			dsc = 'На столе стоит {монитор}, на который транслируется видео с камер слежения со складского помещения.';
			act = 'Я вижу шесть прямоугольных областей, в каждой из которых отображается видео с соответствующей видеокамеры в реальном времени.';
		};
		
		obj {
			nam = 'Телефон';
			dsc = 'Рядом с монитором на столе лежит простенький {телефонный аппарат}, для связи с главным офисом.';
			act = 'Я поднял трубку и приложил к уху - гудков не слышно, тишина.';
		};
	};
	way = {'storage'};
};
