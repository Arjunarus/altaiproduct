
game._brokenpc = 0; --номер сломаного компа

-- триггеры квестов, включаются по ходу игры, динамически
game._mainquest = false; -- главный мега-квест
game._makecopyquest = false; -- мини-квест "ксерокопирование"
game._pcfixing = false; -- мини-квест "починка компа"

mfu1 = obj{
	_fixed = false;
	_paperinside = false;
	nam = 'Sharp AL-1217',
	dsc = 'Рядом со столом стоит старое {МФУ} Sharp.',
	used = function(s,w)
		if w=='sheetpaper' then
			return goto('mfuscene');
		else return 'Ну и зачем?';
		end;
	end;
	act = function(s)
			local l='';
			if s._paperinside then	
				mfucover:enable();
				l='Осмотрев МФУ, сбоку я обнаружил крышку.';
			end;
			return 'Старая МФУ-шка, уже снятая с производства, модель Sharp AL-1217. '..l;
	end,
	obj = {'mfucover'},
};


mfucover = obj{
	_opened = false;
	nam = 'крышка от мфу',
	dsc = function(s)
		if s._opened then
			return '{Крышка} МФУ открыта.';
		else return 'Сбоку у МФУ есть {крышка}.';
		end;
	end,
	act = function(s,w)
		if w==1 then
			if not s._opened then
				s._opened = true;
				bolt:enable();
				if mfu1._paperinside then badpaper:enable(); end;
				return 'Я нажал на защелку, крышка открылась.';
			else return 'Крышка уже открыта, ни к чему нажимать на защелку.';
			end;
		else 
			if s._opened then
				s._opened=false;
				if mfu1._paperinside then badpaper:disable(); end;
				bolt:disable();
				return 'Я захлопнул крышку';
			else return 'Крышка закрыта.';
			end;
		end;
	end,
	obj = {
		vobj(1,'защелка','Крышка закрывается посредством {защелки}.'),
		'bolt',
		'badpaper'
	},
}:disable();

badpaper = obj {
	nam = 'смятый лист',
	dsc = 'В механизме виден смятый {лист бумаги}.',
	act = function(s)
		s:disable();
		mfu1._paperinside = false;
		return 'Я вытащил помятый лист из механизма';
	end,
	
}:disable();



bolt = obj{
	nam = 'болт',
	dsc = 'Рассмотрев внутренности МФУ я заметил один выделяющийся {болт}, который держит механизм.',
	act = function()
		if mfu1._fixed then
			return 'Отрегулированный болт, может быть теперь бумага не будет зажевываться.';
		else return 'Болт, держит механизм прохода бумаги. Его бы подрегулировать.';
		end;
	end,
	used = function(s,w)
		if mfu1._fixed then
			return 'Я уже отрегулировал болт, лучше к нему теперь не лезть.';
		else
			if w=='otvertka' then
				mfu1._fixed=true;
				return 'Я подрегулировал болт, кажется теперь не должно зажевывать.';
			else return 'Боюсь этим тут не поможешь.';
			end;
		end;
	end,
}:disable();

badpcdlg = dlg{
	nam = 'сломался комп',
	dsc = function()
		--mobile._calling=false;
		return 'Я снял трубку. Это звонят из кабинета '..game._brokenpc..'.';
	end,
	obj={
		[1] = phr('Алло!','Алло! Это системный администратор?',[[pon(2,3)]]),
		[2] = _phr('Да, что-то случилось?','У нас сломался компьютер.',[[pon(4);poff(3)]]),
		[3] = _phr('Нет, вы позвонили в администрацию президента.','Передайте президенту, что у нас сломался компьютер.',[[pon(4);poff(2)]]),
		[4] = _phr('Замечательно, а что с ним?','Что-то не работет - придите сами посмотрите.','pon(5)'),
		[5] = _phr('Хорошо, я подойду как освобожусь.'),
	},
	exit = function()
		lifeon('mobile');
		return 'Отлично, теперь еще и комп чинить :(';
	end,
};

mainquestdlg = dlg{
	nam = 'главный квест',
	dsc = 'Это звонит директор!',
	obj = {
		[1] = phr('Алло! Я слушаю.','Алексей! Зайди ко мне!','pon(2)'),
		[2] = _phr('Хорошо, сейчас приду.'),
	},
	exit = function()
		lifeon('mobile');
		return 'Интересно что же такого случилось...';
	end,
};

weatherquestdlg = dlg{
	nam = 'главный квест',
	dsc = 'Это снова звонит директор!',
	obj = {
		[1] = phr('Алло! Я слушаю.','Посмотри погоду в интернете, распечатай и принеси мне.','pon(2)'),
		[2] = _phr('Хорошо, я понял.'),
	},
	exit = function()
		lifeon('mobile');
		return 'Хм... нужно найти прогноз погоды в интернете..';
	end,
};

mobile = obj{
	r=1;
	--game._brokenpc=0;
	_calling=false;
	_state=0; --состояние 
	nam = 'мобильник',
	inv = function(s)
		if s._calling then
			lifeoff('mobile');
			s._calling=false;
			if s._state==1 then
				local num=rnd(8);
				if num==1 then kab1.obj:add('badpc') end;
				if num==2 then kab2.obj:add('badpc') end;
				if num==3 then kab3.obj:add('badpc') end;
				if num==4 then kab4.obj:add('badpc') end;
				if num==5 then kab5.obj:add('badpc') end;
				if num==6 then kab6.obj:add('badpc') end;
				if num==7 then kab7.obj:add('badpc') end;
				if num==8 then kab8.obj:add('badpc') end;
				game._brokenpc = num;
				game._pcfixing = true; -- включаем квест поломки компа
				return walkin('badpcdlg');
			end;
			
			if s._state==2 then
				game._mainquest=true; -- включим главный мега-квест 
				walkin(mainquestdlg);
				return;
			end;
			
			if s._state==3 then
				game._weatherquest=true; -- включаем мини-квест с погодой через 50 ходов
				walkin(mainquestdlg);
				return;
			end;
			
			
			return 'Состояние: '..s._state;
		else
			return 'Это мой мобильник Motorolla C650, старенький, такие сейчас не в моде.';		
		end;
	end,
	life = function(s)
		r=r+1;
		if r==3 then --должно быть 3, 0 для отладки
			s._calling=true;
			s._state=2;
		end;
		if r==50 then 
			s._calling=true;
			s._state=3;
		end;
		if r==10 then 
			game._eatingquest = true;
		end;
		
		local rn=rnd(30); --потом проверить возможность одновременного срабатывания рэндома и счетчика
		if rn==15 and not game._pcfixing and not s._calling then
			s._calling=true;
			s._state=1;		
		end;
		
		if s._calling then
			return 'У меня звонит мобильник!';
		else 
			if game._eatingquest and r%2==0 then return 'Что-то я проголодался, надо бы поесть...';
			else return;
			end;
		end;
	end,
};

badpc = obj{
	nam = 'сломаный комп',
	dsc = 'Вам показали на сломаный {комп} в кабинете.',
	
};

cophumlife=obj{
	nam = 'фиктивная сотрудница',
	life= function(s)
		local r = rnd(10);
		if r >8 then
			copyhuman:enable();
			lifeoff(s);
		end;
		--return string.rep('1',r);
	end,
};

copyhuman = obj{
	nam = 'сотрудница',
	dsc = 'В кабинет пришла {сотрудница} кажется ей что-то от меня нужно.',
	act = function()
		return goto('copydlg');
	end,
	
}:disable();

copydlg = dlg{
-- здесь поставить на выбор случайную фотку из 5
	nam = 'разговор с сотрудницей',
	enter = function(s)
		if game._makecopyquest then
			s:pon(6);
		else
			s:pon(1);
		end;
		return;
	end,
	dsc = 'Одна из наших сотрудниц.',
	obj = {
	[1]=_phr('Чем-то помочь?','Да, мне нужно отксерокопировать документ.',[[r=rnd(2)+1;pon(r);]]),
	[2]=_phr('А при чем тут я - ксерокс находится в 4м кабинете.','Да, но в нём закончился тонер',[[pon(4);game._MFUvoid = true;]]),
	[3]=_phr('Ксерокс у нас находится в 4м кабинете.','Тот ксерокс занят и надолго.',[[pon(4);game._MFUvoid = false;]]),
	[4]=_phr('Хм.. странно, только что вроде все было нормально...','Можно использовать этот ксерокс? (показывает на МФУ возле моего стола)',[[pon(5);]]),
	[5]=_phr('Это плохой ксерокс, он жует бумагу, но можно попробовать.','Копи нужна очень срочно! Вот этот документ.',[[inv():add('sheetpaper');pon(6);game._makecopyquest = true;return back()]]),
	[6]=_phr('Вы все еще тут?','Да, нельзя ли побыстрее, копия нужна срочно!'),
	},
},

inv():add('mobile');
lifeon('mobile');
r=0;
game._dirtyhands = true;
game._MFUvoid = false;
